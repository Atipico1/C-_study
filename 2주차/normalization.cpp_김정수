#include <iostream>
#include <array>
#include <math.h>
using namespace std;
#define max_length 100


int main(){
    float xset[] = {12321.2, 13433.4, 22348.3, -12353.0, 48938.7,-10890.2,19343.7, 13892.4,15747.4,}; //x data
    int n = 9;
    float avg;
    float std;
    float *ptr = xset; // array의 첫번째 주소를 *ptr에 넣고 선언
    for(int i=0; i<n; i++) { avg+=ptr[i];} // data sum
    avg = avg/n; //평균
    for(int j=0; j<n; j++) { std += pow((ptr[j]-avg),2.0);} // 제곱합 
    std = std/(n-1); // 표본표준편차 
    
    float norm[9];
    for(int k=0; k<n;k++){norm[k] = (*(xset+k)-avg)/sqrt(std);} //정규화 
    
    cout<<'\n'<<endl;
    for (int u = 0; u<9;u++){cout<<*(norm+u)<<' ';} //정규화된 배열값

    float* m = normalization(xset,n,mean(x,9),stdev(x,9,mean(x,9)));
    cout<<'\n'<<endl;
    for (int g = 0; g<9;g++){cout<<*(m+u)<<' ';}
}

float mean(float x[],int len){
    float avg;
    float *ptr = x; // array의 첫번째 주소를 *ptr에 넣고 선언
    for(int i=0; i<len; i++) { avg+=ptr[i];} // data sum
    avg = avg/len; //평균

    return avg;
}

float stdev(float x[],int len, float avg){
    float std;
    float *ptr = x;
    for(int j=0; j<len; j++) { std += pow((ptr[j]-avg),2.0);} // 제곱합 
    std = std/(len-1);
    return sqrt(std);
}

float * normalization(float x[],int len,float avg, float std){
    for(int k=0; k<len;k++){x[k] = (x[k]-avg)/sqrt(std);}
    return x;
}

